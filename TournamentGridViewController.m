//
//  TournamentGridViewController.m
//  SecondScreenApp
//
//  Created by Ricardo Lunar on 12/08/13.
//  Copyright (c) 2013 Ricardo Lunar. All rights reserved.
//

#import "TournamentGridViewController.h"
#import "TournamentMatchDetailViewController.h"
#import "Utils.h"

@interface TournamentGridViewController ()

@end

@implementation TournamentGridViewController

- (id)initWithNibName:(NSString *)nibNameOrNil bundle:(NSBundle *)nibBundleOrNil
{
    self = [super initWithNibName:nibNameOrNil bundle:nibBundleOrNil];
    if (self) {
        // Custom initialization
        self.offset = 10.00;
        self.width = 1024.00-(self.offset*2);
        self.height = 768.00-(self.offset*3)-70-100;
        self.view.frame = CGRectMake(self.offset, (self.offset*2)+70, self.width, self.height);
        self.view.backgroundColor = [UIColor clearColor];
    }
    return self;
}

- (void)viewDidLoad
{
    [super viewDidLoad];
    // Do any additional setup after loading the view from its nib.
}

- (void)didReceiveMemoryWarning
{
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

// GIVEN AN ARRAY WITH THE MATCHES JSON FOR EACH LAP OF THE TOURNAMENT,
// TOURNAMENT IS GENERATED BY DIVIDING EACH LAP INTO TWO PARTS:
// ONE FOR THE LEFT SIDE MATCHES AND ONE FOR THE RIGHT SIDE MATCHES.
-(void) generateTournament:(NSNumber *) numEtapas withMatches: (NSArray *) matches andThird: (NSArray *) tercer andTimezone: (NSString *) timezone{
    self.timezone = timezone;
    
    NSArray *parsedMatches = @[[TournamentGridViewController parseMatchesArray:(NSArray *)[matches objectAtIndex:0]],
                               [TournamentGridViewController parseMatchesArray:(NSArray *)[matches objectAtIndex:1]],
                               [TournamentGridViewController parseMatchesArray:(NSArray *)[matches objectAtIndex:2]],
                               [TournamentGridViewController parseMatchesArray:(NSArray *)[matches objectAtIndex:3]]];
    NSArray *data = @[parsedMatches,[TournamentGridViewController parseMatchesArray:tercer]];
    
    // laps = 2*(numEtapas-1) + 1
    int etapas = numEtapas.intValue;
    self.laps = (2*etapas)+1; // Double columns + center column
    for(int i=0; i<self.laps; i++){
        
        int divisions;
        if(i<floor(self.laps/2)-1)
            divisions = pow(2,abs(i-2)); // Divisions on lap = 2^abs(x-2)
        else if (i>floor(self.laps/2)+1)
            divisions = pow(2,abs(i-4)); // Divisions on lap = 2^abs(x-4)
        else
            divisions = 1;
        
        TournamentLapViewController *tlvc = [[TournamentLapViewController alloc] initWithNibName:@"TournamentLapViewController" bundle:nil];
        CGSize size = CGSizeMake(self.width, self.height);
        [tlvc generateLap:i forN:divisions inScreenOf: size forLaps: self.laps withData: data];
        [self.view addSubview:tlvc.view];
    }
    
    [self setClickOnSections:data];
    
}

+ (NSMutableArray *) parseMatchesArray:(NSArray *)matchesArray{
    NSMutableArray * matches = [[NSMutableArray alloc] init];
    NSMutableDictionary *matchTmp;
    
    for (int i=0; i<[matchesArray count]; i++){
        matchTmp = [matchesArray objectAtIndex:i];
        Match* match = [ParserMatch parse:matchTmp];
        [matches addObject:match];
    }
    
    return matches;
}

- (void) setClickOnSections:(NSArray *)data{
    
    // A DICTIONARY IS USED TO DETERMINE WHICH MATCH IS TAPPED.
    if(!self.idsForHashes)
        self.idsForHashes = [[NSMutableDictionary alloc] init];
    
    for (int i = 0; i<[self.view.subviews count]; i++) {
        UIView *lap = [self.view.subviews objectAtIndex:i];
        
        NSArray *dataForDivisions = [Utils getDataForDivision: i using: data andNumEtapas: self.laps];
        
        for (int j = 0; j<[dataForDivisions count]; j++) {
            UIView *section = [lap.subviews objectAtIndex:j]; 
            UITapGestureRecognizer *tap = [[UITapGestureRecognizer alloc] initWithTarget:self action:@selector(clickedOnMatch:)];
            NSArray *keys = @[@"match"];
            
            NSArray *objects = @[(Match *)[dataForDivisions objectAtIndex:j]];
            NSMutableDictionary *matchClick = [NSMutableDictionary dictionaryWithObjects:objects forKeys:keys];
            
            // SETTING THE DICTIONARY OF THE MATCH AS VALUE FOR ITS TAP GESTURE RECOGNIZER HASH SET AS KEY.
            [self.idsForHashes setObject:matchClick forKey:[NSNumber numberWithInt:tap.hash]];
            [section addGestureRecognizer:tap];
        }
        
        // CONSIDERING THE THIRD-FOURTH MATCH CLICK (IF APPLICABLE)
        if(i == floor(self.laps/2) && [data[1] count] != 0){
            UIView *section = [lap.subviews objectAtIndex:1];
            UITapGestureRecognizer *tap = [[UITapGestureRecognizer alloc] initWithTarget:self action:@selector(clickedOnMatch:)];
            NSArray *keys = @[@"match"];
            // Third click
            NSArray *objects = @[(Match *)[[data objectAtIndex:1] objectAtIndex:0]];
            NSMutableDictionary *matchClick = [NSMutableDictionary dictionaryWithObjects:objects forKeys:keys];
            [self.idsForHashes setObject:matchClick forKey:[NSNumber numberWithInt:tap.hash]];
            [section addGestureRecognizer:tap];
        }
    }
}

// TAP HANDLER FOR EVERY MATCH. THIS SHOWS TIME OF THE MATCH BY FLIPPING THE MATCH.
- (void) clickedOnMatch: (UITapGestureRecognizer *)sender{
        TournamentMatchDetailViewController *tmdvc = [[TournamentMatchDetailViewController alloc] initWithNibName:@"TournamentMatchDetailViewController" bundle:nil];
        Match *match = [[self.idsForHashes objectForKey:[NSNumber numberWithInt:sender.hash]] objectForKey:@"match"];
        
        tmdvc.view.frame = CGRectMake(0,0,sender.view.frame.size.width,sender.view.frame.size.height);
        UITapGestureRecognizer *tapBack = [[UITapGestureRecognizer alloc] initWithTarget:self action:@selector(clickedOnMatchBack:)];
        [tmdvc.view addGestureRecognizer:tapBack];
        sender.view.backgroundColor = [UIColor clearColor];
        [sender.view.subviews setValue:@YES forKeyPath:@"hidden"];
        [UIView transitionWithView:sender.view
                          duration:1
                           options:UIViewAnimationOptionTransitionFlipFromTop
                        animations:^{
                            [sender.view insertSubview:tmdvc.view atIndex:[[sender.view subviews] count]];
                            [tmdvc.date setText:[TournamentMatchDetailViewController changeDate:match.time withTimezone:self.timezone]];
                        } completion:nil];
}

- (void) clickedOnMatchBack: (UITapGestureRecognizer *)sender{
    [sender.view.superview.subviews setValue:@NO forKeyPath:@"hidden"];
    sender.view.superview.backgroundColor = [UIColor colorWithRed:10/255 green:10/255 blue:10/255 alpha:0.6f];
    [UIView transitionWithView:[sender.view superview]
                      duration:1
                       options:UIViewAnimationOptionTransitionFlipFromBottom
                    animations:^{
                        
                        [sender.view removeFromSuperview];
                        
                    } completion:nil];
}

@end
